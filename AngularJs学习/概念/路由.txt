						单页面应用的工作原理:
	a.url
		http://127.0.0.1/index.html#/路由地址
	b.浏览器请求index.html,解析路由地址
	c.查找路由词典，#/strat===>tpl/start.html
	d.获取当前路由地址，对应的正是模板的地址start.html
	e.发起ajax请求，获取目标模板页面，将服务器返回的代码片段，插入到
	当前的DOM树，实现局部刷新。


	使用ngRoute模块来实现SPA应用的基本步骤 :
		a.创建完整的HTML页面 index.html,引入angular.js,angular-route.js
			<script type="text/javascript" src="js/angular.js"></script>
			<script type="text/javascript" src="js/angular-route.js"></script>
		b.创建自定义模块，指定依赖于ng\ngRoute
		 var md = angular.module("myApp",['ng','ngRoute']);
		c.指定容器，盛放代码片段 ngView
			<div ng-view>
			
			</div> 
		d.创建模板页面
		e.配置路由词典
			 //配置路由词典
			   md.config(function($routeProvider){
			   		$routeProvider
			   		.when('/login',{
			   			templateUrl :'tpl/login.html'	
					})
					.when('/main',{
						templateUrl : 'tpl/main.html'
					})
					.otherwise(
						{redirectTo:'/login'}
					);
			   });	
		f.测试在地址栏中 输入不同的路由地址的时候，能否将代码片段
		  加载进来。

		 模板页面之间 执行跳转的3种方式 :
		 	a.直接修改地址栏中url
		 	b.使用超链接<a href='#/路由地址'></a>
		 	c.$location.path('/路由地址')

		 如果有多个代码片段，都需要通过js的方式来跳转，为每个代码片段
		 去创建控制器，去定义jump方法，这个是不合理的，借助父控制器定义方法，然后让子控制器去调用。

		 配置代码片段的控制器的方式:
		 	a.ng-controller
		 	b.配置路由词典设置
		 	$routeProvider.when('/myLogin',{
		 		templateUrl :'tpl/login.html',
			   	controller : 'loginCtrl'	
		 	})
		 		从register跳转到start
		 				使用ngRoute进行参数的传递:
		 	a.明确发送方和接收方
		 		发送方：register
		 		接收方: start
		 	b.配置接收方的路由
		 		.when('/start',{
					templateUrl:'tpl/start.html'
				})
				.when('/start/:id',{
					templateUrl:'tpl/start.html'
				})
			如果接受id,借助ngRoute服务:$routeParams.id
			c.发送参数
				<a href='#/mystart/123'></a>
				$location.path('mystart/123')

